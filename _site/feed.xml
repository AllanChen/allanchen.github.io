<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 24 Nov 2014 10:48:53 +0800</pubDate>
    <lastBuildDate>Mon, 24 Nov 2014 10:48:53 +0800</lastBuildDate>
    <generator>Jekyll v2.5.2</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 18:45:06 +0800</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/24/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/24/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>How to create Private Pod</title>
        <description>&lt;p&gt;对于一些IOS 开发者而言，管理第三方库的确是一件令人头疼的事情。而Cocoapod 恰恰是解决你这个烦恼的一个第三方管理库。
尽管pod上有许许多多的第三方库提供给开发者使用，但是很多人还是喜欢把自己的一些库或者Helper使用到各个项目上面去，这样不单单是可以提高个人的开发效率。对于以后有新人的加入，项目的重构管理起来都是颇为省劲。下面我就介绍一下如何去制作一个“私有的POD”。&lt;/p&gt;

&lt;h3 id=&quot;pod&quot;&gt;创建一个Pod&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;创建一个Git的 &lt;a href=&quot;https://github.com/new&quot;&gt;Repositories&lt;/a&gt; &lt;/li&gt;
  &lt;li&gt;创建一个 Podspec 
&amp;lt;pre class=&quot;prettyprint&quot;&amp;gt;pod spec create YOUR_PODSPEC_FILE_NAME&amp;lt;/pre&amp;gt;&lt;/li&gt;
  &lt;li&gt;添加如下内容  &lt;a href=&quot;https://github.com/AllanChen/ACNetworkframework/blob/master/ACNetworkframework.podspec&quot;&gt;查看并复制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AllanChen/allanchen.github.io/master/images/privatepod/Screen%20Shot%202014-07-08%20at%2010.01.15.png&quot; alt=&quot;Podspec File&quot; /&gt;
###Podspec 文件解析：
1. s.name – Pod 项目名字 ， 
2. s.summary 一个简短的说明文档 （pod search命令就是根据这两项内容作为搜索文本的）
3. s.homepage 库的主页，
4. s.version 库代码的版本，
5. s.license所采用的授权版本，
6. s.author 是指作者。
7. s.source 声明原代码的地址
8. s.ios.deployment_target
9. s.description 项目的描述
10. s.source_files 项目的文件
11. s.dependency 项目依赖的第三方库
12. s.platform   支持的最低版本&lt;/p&gt;

&lt;p&gt;笔者在这个库中，用到的就是以上的一些属性。但是在PODSPEC 文件中，还有十分多的选项提供个大家去选择如&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	# s.screenshots  = &quot;www.example.com/screenshots_1.gif&quot;,&quot;www.example.com/screenshots_2.gif&quot;
	# s.platform     = :ios
	# s.platform     = :ios, &quot;5.0&quot;
	# s.ios.deployment_target = &quot;5.0&quot;
	# s.osx.deployment_target = &quot;10.7&quot;  
	# s.public_header_files = &quot;Classes/**/*.h&quot;
	# s.resource  = &quot;icon.png&quot;
	# s.resources = &quot;Resources/*.png&quot;
	# s.preserve_paths = &quot;FilesToSave&quot;, &quot;MoreFilesToSave&quot;
	# s.frameworks = &quot;SomeFramework&quot;, &quot;AnotherFramework&quot;
	# s.library   = &quot;iconv&quot;
	# s.libraries = &quot;iconv&quot;, &quot;xml2&quot;
	# s.requires_arc = true
	# s.xcconfig = { &quot;HEADER_SEARCH_PATHS&quot; =&amp;gt; &quot;$(SDKROOT)/usr/include/libxml2&quot; }
	# s.dependency &quot;JSONKit&quot;, &quot;~&amp;gt; 1.4&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各种选项的意思其实在字义的表面已经可以看出来，我在这里就不一一细说。
创建好Podspec文件后，连同自己的代码一并上传到Git上面。&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;本地的目录&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AllanChen/allanchen.github.io/master/images/privatepod/Screen%20Shot%202014-07-08%20at%209.55.53.png&quot; alt=&quot;Local file&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;git&quot;&gt;Git上面的目录&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AllanChen/allanchen.github.io/master/images/privatepod/Screen%20Shot%202014-07-08%20at%209.56.15.png&quot; alt=&quot;Git file&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;podspecgit&quot;&gt;需要注意的是，Podspec文件必须在git目录中！！&lt;/h3&gt;
&lt;p&gt;到这里，你已经很成功的创建了一个私有的Pod了。&lt;/p&gt;

&lt;h3 id=&quot;pod-1&quot;&gt;使用你的Pod吧&lt;/h3&gt;

&lt;p&gt;在你使用该库的项目上创建Podfile 文件 ，添加如下内容，然后保存
&amp;lt;pre class=&quot;prettyprint&quot;&amp;gt; platform :ios 
	pod ‘YOUR_POD_NAME’, :git =&amp;gt; ‘https://github.com/YOUR_POD_URL
&amp;lt;/pre&amp;gt;&lt;/p&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;pod install&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AllanChen/allanchen.github.io/master/images/privatepod/Screen%20Shot%202014-07-08%20at%209.54.57.png&quot; alt=&quot;install Ing&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;and-more&quot;&gt;And more?&lt;/h3&gt;
&lt;p&gt;关于Pod的一些原理，大家可以看&lt;a href=&quot;http://blog.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/&quot;&gt;这里&lt;/a&gt; &lt;/p&gt;
</description>
        <pubDate>Mon, 07 Jul 2014 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/blog/2014/07/07/how-to-create-private-pod.html</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/2014/07/07/how-to-create-private-pod.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>XIB-VS-CODE</title>
        <description>&lt;p&gt;最近在不管在面试还是在项目的交流中，面试者和同事们都不约而同的提出问题。
究竟IOS的开发中，XIB是否真的有存在的必要吗？
Apple 的xib和storyBoard真的减轻了开发人员的开发成本吗？
Geek们真的愿意去用吗？&lt;/p&gt;

&lt;p&gt;下面我们来比较一下，“纯手写UI+逻辑代码” 和 “通过XIB布局+逻辑代码” 两者的实用性和效率
我们以一个登录+展示列表 为功能点进行代码的编写&lt;/p&gt;

&lt;p&gt;1：纯手写UI&lt;/p&gt;

&lt;p&gt;2：通过XIB布局&lt;/p&gt;

&lt;p&gt;总结：
通过比较，大家都不难发现。如果拿一些简单的布局来说，通过XIB开发者不但能够快速的构建自己需要的UI，还可以针对性的进行一些调整。而这是手写代码所做不到的一点。
而一旦如果你的元素太多的话，你的XIB文件就会变得越来大，渲染的速度也会相应的提高。所以在开发一些大型的应用软件或一些UI结构复杂的界面是，手写UI是比XIB要优秀。
写到这里，你可能会说。那就是纯手写比XIB要好咯。我可以肯定的回答—“不”！在我的角度我并不认为它们两是一定要独立存在的。XIB+手写代码，才是开发IOS效率和用户体验的王道。&lt;/p&gt;

</description>
        <pubDate>Fri, 27 Jun 2014 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/2014/06/27/XIB-VS-CODE.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2014/06/27/XIB-VS-CODE.html</guid>
        
        
      </item>
    
      <item>
        <title>About iTunes ERROR 17</title>
        <description>&lt;h2 id=&quot;mac-&quot;&gt;Mac 解决方法&lt;/h2&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;nano /etc/hosts&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;贴上如下代码
&amp;lt;pre class=&quot;prettyprint&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;host-database&quot;&gt;Host Database&lt;/h3&gt;
    &lt;p&gt;# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1	localhost
255.255.255.255	broadcasthost
::1             localhost 
fe80::1%lo0	localhost
#127.0.0.1      osxdaily.com
0.0.0.0		yahoo.com
0.0.0.0		www.yahoo.com&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/pre&amp;gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果系统版本是OS X 10.9时请清除缓存
&amp;lt;pre class=&quot;prettyprint&quot;&amp;gt;dscacheutil -flushcache;sudo killall -HUP mDNSResponder&amp;lt;/pre&amp;gt;
##Windows 解决方法&lt;/li&gt;
  &lt;li&gt;直接编辑  C:\WINDOWS\system32\drivers\etc\hosts &lt;/li&gt;
  &lt;li&gt;贴上如下代码
&amp;lt;pre class=&quot;prettyprint&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;host-database-1&quot;&gt;Host Database&lt;/h3&gt;
    &lt;p&gt;# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1	localhost
255.255.255.255	broadcasthost
::1             localhost 
fe80::1%lo0	localhost
#127.0.0.1      osxdaily.com
0.0.0.0		yahoo.com
0.0.0.0		www.yahoo.com&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/pre&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Jun 2014 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/blog/2014/06/07/about-itunes-error-17.html</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/2014/06/07/about-itunes-error-17.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Cocoapods with Xcode 6 and Yosemite</title>
        <description>&lt;h4 id=&quot;cocospods-xcodecocospods-pod-install&quot;&gt;COCOSPODS 就是其中一个不兼容，你的更新xcode，COCOSPODS 才可以继续用pod install&lt;/h4&gt;

&lt;h4 id=&quot;section&quot;&gt;具体步奏如下&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;打开 Xcode 6&lt;/li&gt;
  &lt;li&gt;Command + ,&lt;/li&gt;
  &lt;li&gt;选择 Locations&lt;/li&gt;
  &lt;li&gt;将 Command Line Tools version 变为 Xcode 6.0&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;卸载 cocospods&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;pre class=&quot;prettyprint&quot;&gt;$ sudo gem uninstall cocoapods&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装 xcodeproj&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;pre class=&quot;prettyprint&quot;&gt;$ sudo gem install xcodeproj&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装 cocoapods &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;pre class=&quot;prettyprint&quot;&gt;$ sudo gem install cocoapods&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;Run pod –version to verify that it worked&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;terminalcdpod-install&quot;&gt;执行上面的命令之后，可能你还会失败。但是不要紧，把你Terminal的窗口关掉重新cd到你的项目在执行pod install就可以了。&lt;/h4&gt;
</description>
        <pubDate>Sat, 07 Jun 2014 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/blog/2014/06/07/about-cocoapods-with-Xcode6-and-Yosemite.html</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/2014/06/07/about-cocoapods-with-Xcode6-and-Yosemite.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Mac Clear SVN Command</title>
        <description>&lt;h3 id=&quot;mac-svn&quot;&gt;清除Mac 项目中的.SVN文件&lt;/h3&gt;

&lt;p&gt;有时候因为一些SDK，和一些类库的不兼容。导致svn中的某些文件上传不了或者更新不了，这时候你就的清除这个文件下的svn文件，然后 iGnored&lt;/p&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;find ./ -name &quot;.svn&quot; | xargs rm -Rf&lt;/pre&gt;

</description>
        <pubDate>Fri, 30 May 2014 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/tag/2014/05/30/mac-clear-svn-files.html</link>
        <guid isPermaLink="true">http://yourdomain.com/tag/2014/05/30/mac-clear-svn-files.html</guid>
        
        
        <category>tag</category>
        
      </item>
    
  </channel>
</rss>
